@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <!--<h1 style="color:white" class="display-4">Welcome</h1>-->
    <h1 style="color:white" class="display-4">Welcome to the MoneyPlus API</h1>
    <!--<p style="color:white">Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>-->
    <br />

    <p style="color:white">This API is a part of MoneyPlus application. Below you can find a list of available endpoints. Endpoints are protected and only authorized users can have access to them so don't worry if you get error after entry to selected endpoint.</p>
    
    <br />

    <table>
        <tr>
            <th>Endpoint Path</th>
            <th>Method Type</th>
            <th>Description</th>
        </tr>
        <tr>
            <td>/api/register</td>
            <td>POST</td>
            <td>Method allow to create new account. You have to send data in json format like below:<br/>{"firstName" : string, "lastName" : string, "password" : string, "age" : int, "email" : string}</td>
        </tr>
        <tr>
            <td>/api/login</td>
            <td>POST</td>
            <td>Method allow to login to application. You have to send data in json format like below:<br/>{"email" : string, "password" : string}</td>
        </tr>
        <tr>
            <td>/api/profile</td>
            <td>GET</td>
            <td>Method return informations about user. Informations are send in json format like below:<br/>{"id" : string, "firstName" : string, "lastName" : string, "age" : int, "email" : string}</td>
        </tr>
        <tr>
            <td>/api/refresh</td>
            <td>POST</td>
            <td>This endpoint allow to generate new access token and refresh token. You have to send your actual refresh token in json format like below: <br/> {"refreshToken" : string}</td>
        </tr>
        <tr>
            <td>/api/categories/{id?}</td>
            <td>GET</td>
            <td>Method return informations about all available categories. If you add category id you will get informations only about selected category. Informations are send in json format like below:<br />{"id" : string, "categoryName" : string, "iconName" : string, "color" : string, "typeOfCategory" : string}</td>
        </tr>
        <tr>
            <td>/api/expenses/{id?}</td>
            <td>GET</td>
            <td>Method return informations about all expenses of selected user. If you add expense id you will get informations only about selected expense. Informations are send in json format like below:<br />{"category" : {"id" : string, "categoryName" : string, "iconName" : string, "color" : string, "typeOfCategory" : string}, "id" : string, "name" : string, "value" : decimal, "creationDate" : DateTime}</td>
        </tr>
        <tr>
            <td>/api/expenses/edit</td>
            <td>POST/PUT/DELETE</td>
            <td>Methods allow to add new expense, remove expense and edit existing expense. For every method you have to send data in json format like below:<br />For POST method: {"categoryId" : string, "name" : string, "value" : decimal}<br />For PUT method: {"id" : string, "categoryId" : int, "name" : string, "value" : decimal}<br />For DELETE method: {"id" : string}</td>
        </tr>
@*        <tr>
            <td>/api/expenses/remove</td>
            <td>POST</td>
            <td>Method allow to remove existing expense. You have to send data in json format like below:<br />{"expenseGuid" : string}</td>
        </tr>*@
        <tr>
            <td>/api/receipts/{id?}</td>
            <td>GET</td>
            <td>Method return informations about all receipts of selected user. If you add receipt id you will get informations only about selected receipt. Informations are send in json format like below:<br />{"category" : {"id" : string, "categoryName" : string, "iconName" : string, "color" : string, "typeOfCategory" : string}, "id" : string, "name" : string, "value" : decimal, "creationDate" : DateTime}</td>
        </tr>
        <tr>
            <td>/api/receipts/edit</td>
            <td>POST/PUT/DELETE</td>
            <td>Methods allow to add new receipt, remove receipt and edit existing receipt. For every method you have to send data in json format like below:<br />For POST method: {"categoryId" : string, "name" : string, "value" : decimal}<br />For PUT method: {"id" : string, "categoryId" : string, "name" : string, "value" : decimal}<br />For DELETE method: {"id" : string}</td>
        </tr>
@*        <tr>
            <td>/api/receipts/remove</td>
            <td>POST</td>
            <td>Method allow to remove existing receipt. You have to send data in json format like below:<br />{"receiptsGuid" : string}</td>
        </tr>*@
        <tr>
            <td>/api/settings</td>
            <td>POST</td>
            <td>Not implemented yet but if you really want to check what is there - no problem, you can do this ¯\_(ツ)_/¯</td>
        </tr>
        <tr>
            <td>/api/categories/add</td>
            <td>POST</td>
            <td>This endpoint could allow to create a new category by user but unfortunately it doesn't work and if you want to know why, you have to go to this endpoint ( ͡° ͜ʖ ͡°)</td>
        </tr>
        <tr>
            <td>/swagger/index.html</td>
            <td>GET</td>
            <td>Here you can find better documentation of the above endpoints</td>
        </tr>
    </table>
    <style>
        body {
            color: white;
            background-color: black;
        }
    </style>
</div>

<br/>

<p style="color:white">Created with ❤️ to money :D</p>

<style>
    body {
        background-color: black;
    }
</style>